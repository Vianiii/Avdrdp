name: VNC-Desktop-with-KVM

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Duration in hours'
        required: true
        default: '6'

jobs:
  vnc-desktop:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - uses: actions/checkout@v4

      # ‚≠ê Free disk space
      - name: Free Disk Space
        run: |
          sudo rm -rf /usr/share/doc/* /usr/share/man/* /usr/share/locale/* 2>/dev/null
          sudo apt-get clean && sudo apt-get autoclean -y 2>/dev/null
          sudo rm -rf /opt/* /var/cache/* /tmp/* 2>/dev/null
          df -h /

      # ‚≠ê Enable KVM
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          sudo chmod 666 /dev/kvm
          sudo usermod -a -G kvm $USER
          ls -la /dev/kvm

      # ‚≠ê Install XFCE + VNC (WORKS ON HEADLESS!)
      - name: Install XFCE & VNC Server
        run: |
          sudo apt-get update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            xfce4 xfce4-terminal tightvncserver xvfb x11vnc wget git curl dbus-x11
          
          echo "‚úÖ XFCE + VNC installed"

      # ‚≠ê Create VNC User & Setup
      - name: Create VNC User & Setup Display
        run: |
          # Create user
          sudo useradd -m -s /bin/bash vncuser 2>/dev/null || true
          echo "vncuser:VNC@123" | sudo chpasswd
          sudo usermod -aG sudo,kvm,video,audio vncuser
          
          # Create .vnc directory
          mkdir -p ~/.vnc
          
          # Set VNC password
          echo "VNC@123" | vncpasswd -f > ~/.vnc/passwd
          chmod 600 ~/.vnc/passwd
          
          # Create VNC xstartup
          cat > ~/.vnc/xstartup << 'VNCSTART'
          #!/bin/bash
          export DISPLAY=:1
          export LANG=en_US.UTF-8
          startxfce4 &
          VNCSTART
          
          chmod +x ~/.vnc/xstartup
          
          echo "‚úÖ VNC User configured"

      # ‚≠ê Start Virtual Display + VNC Server
      - name: Start Xvfb & VNC Server
        run: |
          # Start Xvfb (virtual display)
          Xvfb :1 -screen 0 1920x1080x24 -nolisten tcp > /tmp/xvfb.log 2>&1 &
          sleep 3
          
          # Start XFCE on virtual display
          export DISPLAY=:1
          startxfce4 > /tmp/xfce.log 2>&1 &
          sleep 5
          
          # Start VNC Server (x11vnc - works with existing display)
          x11vnc -display :1 -forever -nopw -rfbport 5900 -bg -nolisten unix
          
          sleep 3
          
          # Verify VNC is running
          ps aux | grep -E "x11vnc|Xvfb|xfce4" | grep -v grep
          
          echo "‚úÖ VNC Server started on port 5900"

      # ‚≠ê Setup Tailscale
      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo systemctl enable tailscaled
          sudo systemctl start tailscaled
          sleep 5
          
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-vnc-${{ github.run_id }}
          sleep 5
          
          TAILSCALE_IP=$(sudo tailscale ip -4)
          if [ -z "$TAILSCALE_IP" ]; then
            echo "Failed to get Tailscale IP"
            exit 1
          fi
          
          echo "TAILSCALE_IP=$TAILSCALE_IP" >> $GITHUB_ENV
          echo "‚úÖ Tailscale: $TAILSCALE_IP"

      # ‚≠ê Display Connection Info
      - name: Display VNC Connection Info
        run: |
          echo ""
          echo "=========================================="
          echo "‚úÖ VNC DESKTOP READY!"
          echo "=========================================="
          echo ""
          echo "üñ•Ô∏è  VNC CONNECTION DETAILS:"
          echo "   Server: $TAILSCALE_IP:5900"
          echo "   Password: VNC@123"
          echo ""
          echo "üéØ How to Connect:"
          echo "   1. Download VNC Viewer (RealVNC, TightVNC, etc)"
          echo "   2. Server: $TAILSCALE_IP:5900"
          echo "   3. Password: VNC@123"
          echo "   4. Click Connect"
          echo ""
          echo "‚ú® Desktop Features:"
          echo "   ‚úÖ XFCE4 Desktop"
          echo "   ‚úÖ KVM Enabled (for Android emulator)"
          echo "   ‚úÖ 30GB+ Free Space"
          echo ""
          echo "üìù Inside Desktop:"
          echo "   1. Download Android Studio"
          echo "   2. Install & Configure SDK"
          echo "   3. Create AVD (KVM accelerated!)"
          echo ""
          echo "=========================================="
          echo ""

      # ‚≠ê Keep Alive
      - name: Keep Session Active
        run: |
          DURATION=${{ github.event.inputs.duration }}
          SECONDS=$((DURATION * 3600))
          echo "üöÄ VNC Session Active for $DURATION hours"
          echo "   Server: $TAILSCALE_IP:5900"
          echo ""
          
          for ((i=0; i<$((SECONDS/300)); i++)); do
            sleep 300
            VNC_RUNNING=$(pgrep -f x11vnc | wc -l)
            if [ $VNC_RUNNING -gt 0 ]; then
              echo "[$((i*5)) min] VNC: Running ‚úÖ"
            else
              echo "[$((i*5)) min] VNC: Restarting..."
              pkill -f x11vnc || true
              sleep 2
              export DISPLAY=:1
              x11vnc -display :1 -forever -nopw -rfbport 5900 -bg -nolisten unix
            fi
          done
